#!/bin/bash
# SPDX-License-Identifier: BSD-2-Clause

# Project's root directory
SOURCE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MAIN_DIR="$(cd $SOURCE_DIR/.. && pwd)"

source $MAIN_DIR/scripts/script_utils

GCC_MIN_VERSION="4.8.0"
GXX_MIN_VERSION="4.8.0"

if [ -z "$CC" ]; then
   if which gcc-7 &> /dev/null; then
      CC=gcc-7
   elif which gcc-6 &> /dev/null; then
      CC=gcc-6
   else
      CC=gcc
   fi
fi

if [ -z "$CXX" ]; then
   if which g++-7 &> /dev/null; then
      CXX=g++-7
   elif which g++-6 &> /dev/null; then
      CXX=g++-6
   else
      CXX=g++
   fi
fi

if ! which $CC &> /dev/null; then
   echo "CC compiler '$CC' not found."
   exit 1
fi

if ! which $CXX &> /dev/null; then
   echo "CXX compiler '$CXX' not found."
   exit 1
fi

if $CC --version | grep gcc &> /dev/null; then
   ver=$(generic_get_version_str $CC)
   fail_if_too_old $CC $ver $GCC_MIN_VERSION
fi

if $CXX --version | grep g++ &> /dev/null; then
   ver=$(generic_get_version_str $CXX)
   fail_if_too_old $CXX $ver $GXX_MIN_VERSION
fi

export CC
export CXX

if [ -f $MAIN_DIR/toolchain/cmake/bin/cmake ]; then
   export CMAKE=$MAIN_DIR/toolchain/cmake/bin/cmake
else
   export CMAKE=cmake
fi

if [[ "$RELEASE" -eq 1 || "$REL" -eq 1 ]]; then
   BUILD_TYPE=Release
else
   BUILD_TYPE=Debug
fi

curr_dir="`pwd`"

if [ "$curr_dir" = "$MAIN_DIR" ]; then
   build_dir="$MAIN_DIR/build"
   mkdir -p $MAIN_DIR/build
else
   build_dir="$curr_dir"
fi

echo "[cmake_run] Using '$CMAKE' as CMake executable"

cd $build_dir
$CMAKE -DCMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_ARGS "$@" $MAIN_DIR
