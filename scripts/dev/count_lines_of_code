#!/usr/bin/python
# SPDX-License-Identifier: BSD-2-Clause

import os
import sys
import subprocess

# Constants

fileTypes = [
   "C (source)",
   "C/C++ (header)",
   "C++ (source)",
   "Assembly",
   "Python",
   "CMake",
   "Shell script"
]

extToType = {
   ".c": "C (source)",
   ".h": "C/C++ (header)",
   ".cpp": "C++ (source)",
   ".cc": "C++ (source)",
   ".cxx": "C++ (source)",
   ".py": "Python",
   ".asm": "Assembly",
   ".S": "Assembly",
   ".cmake": "CMake",
   ".sh": "Shell script"
}

excludedDirs = [
   "docs",
   "build",
   "sysroot",
   "toolchain",
   "system_headers",
   ".git",
   ".vscode"
]

PREFIX = " " * 3
FLEN = [ 15, 10 ] # fields length

#########################################


def GetNoExtFileType(fpath):

   out = subprocess.check_output(['file', fpath])

   if out.find("shell script") != -1:
      return "Shell script"

   if out.find("Python script") != -1:
      return "Python"

   return None

def GetFileType(f, folder):

   if f == "CMakeLists.txt":
      return "CMake"

   fname, fext = os.path.splitext(f)

   if fext == "":
      return GetNoExtFileType(os.path.join(folder, f))

   if not fext in extToType:
      return None

   return extToType[fext]


def CountLinesInFile(f, ft):

   res = 0
   print("file: {0}   -> {1}".format(f, ft))

   with open(f, 'r') as fd:
      for line in fd:
         res += 1

   return res

def IsExcluded(path):

   for e in excludedDirs:
      if path.find(e) != -1:
         return True

   return False

def AccumulateCounters(destArr, arr):

   for ft in fileTypes:
      destArr[ft] += arr[ft]

def PrintCounters(arr, total):

   for ft in fileTypes:

      val = arr[ft]

      if val == 0:
         continue

      strVal = str(val)
      ep = FLEN[0] - len(ft)
      np = FLEN[1] - len(strVal)
      print(PREFIX + ft +" " * ep + " " + " " * np + strVal)

   print("-" * 35)
   totExt = "Total: "
   ep = FLEN[0] - len(totExt)
   np = FLEN[1] - len(str(total))
   print(PREFIX + "Total: " + " " * ep + " " + " " * np + str(total) + "\n")

def main():

   destDirs = sys.argv[1:]

   globalLinesCount = {ft: 0 for ft in fileTypes}
   globalTotal = 0

   print("") # print an empty line

   for destDir in destDirs:

      if not os.path.isdir(destDir):
         continue

      if IsExcluded(destDir):
         continue

      linesByType = {t: 0 for t in fileTypes}
      total = 0

      for folder, subfolders, files in os.walk(destDir):

         if IsExcluded(folder):
            continue

         for f in files:

            ft = GetFileType(f, folder)

            if not ft:
               continue

            c = CountLinesInFile(os.path.join(folder, f), ft)
            linesByType[ft] += c
            total += c
            globalTotal += c


      print ("\nNumber of lines in '{0}':".format(destDir))

      AccumulateCounters(globalLinesCount, linesByType)
      PrintCounters(linesByType, total)

   if len(destDirs) > 1:
      print("\nCumulative number of lines:")
      PrintCounters(globalLinesCount, globalTotal)

#########################################################
if __name__ == "__main__":
   main()
