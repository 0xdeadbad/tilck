#!/bin/bash
# SPDX-License-Identifier: BSD-2-Clause

# ---------------------------------------------------------------
# NOTE
#
# This "script" is NOT meant to be executed directly.
# It is included as a source file by scripts/build_toolchian.
#
# ---------------------------------------------------------------


###############################
# x86-i686 GNU toolchain
###############################

# $1 dir name
# $2 arch name
# $3 tc file name

function internal_download_toolchain {

   local dest="$1"
   local arch="$2"
   local tcname_suffix="$3"

   local tcname="${arch}--${tcname_suffix}"
   local tarname=$tcname.tar.bz2
   local url=http://toolchains.bootlin.com/downloads/releases/toolchains

   download_file_in_cache "$url/$arch/tarballs" "$tarname"
   extract_cachefile_tar_bz "$tarname" $tcname $dest
   cd $dest/bin
}

function download_x86_gcc_toolchain {

   if [[ "$USE_SYSCC" == "1" ]]; then
      echo "NOTE: Skipping download_x86_gcc_toolchain because USE_SYSCC=1"
      return 0
   fi

   pushd .

   if ! [ -d $X86_TOOLCHAIN_DIR_NAME ]; then

      show_work_on_component_msg "i686 GCC TOOLCHAIN (libmusl)"

      internal_download_toolchain            \
         "$X86_TOOLCHAIN_DIR_NAME"           \
         "x86-i686"                          \
         "musl--stable-2018.02-2"

   else
      show_skip_component_msg "i686 GCC TOOLCHAIN (libmusl)"
   fi

   popd
}

function download_x86_gcc_glibc_toolchain {

   pushd .

   if ! [ -d ${X86_TOOLCHAIN_DIR_NAME}_glibc ]; then

      show_work_on_component_msg "i686 GCC TOOLCHAIN (glibc)"

      internal_download_toolchain              \
         "${X86_TOOLCHAIN_DIR_NAME}_glibc"     \
         "x86-i686"                            \
         "glibc--stable-2018.02-2"

      # To make musl-gcc happy

      for x in *; do
         if [[ $x == i686* ]]; then
            new_name=`echo $x | sed 's/i686/i386/g' -`
            ln -s $x $new_name
         fi
      done

      for x in *; do
         if [[ $x == i386-linux-* ]]; then
            new_name=`echo $x | sed 's/i386-linux-/i386-/g' -`
            ln -s $x $new_name
         fi
      done

   else
      show_skip_component_msg "i686 GCC TOOLCHAIN (glibc)"
   fi

   popd
}


############################################################

all_funcs_list+=(download_gcc_toolchain)
function download_gcc_toolchain {

   if [[ "$ARCH" == "i386" ]]; then
      download_x86_gcc_toolchain
   else
      echo "Architecture '$ARCH' not supported."
      exit 1
   fi
}

all_funcs_list+=(download_gcc_glibc_toolchain)
function download_gcc_glibc_toolchain {

   if [[ "$ARCH" == "i386" ]]; then
      download_x86_gcc_glibc_toolchain
   else
      echo "Architecture '$ARCH' not supported."
      exit 1
   fi
}
