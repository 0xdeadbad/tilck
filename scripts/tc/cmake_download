#!/bin/bash

# ---------------------------------------------------------------
# NOTE
#
# This "script" is NOT meant to be executed directly.
# It is included as a source file by scripts/build_toolchian.
#
# ---------------------------------------------------------------

CMAKE_VERSION_TO_DOWNLOAD="3.2.3"
CMAKE_MIN_VERSION="3.2.0"

function download_cmake_internal {

   show_work_on_component_msg "CMAKE"

   ver1=$(get_version_comp $CMAKE_VERSION_TO_DOWNLOAD 1)
   ver2=$(get_version_comp $CMAKE_VERSION_TO_DOWNLOAD 2)
   ver3=$(get_version_comp $CMAKE_VERSION_TO_DOWNLOAD 3)

   filename=cmake-${ver1}.${ver2}.${ver3}-Linux-x86_64
   tarname=$filename.tar.gz
   wget https://cmake.org/files/v${ver1}.${ver2}/$tarname
   tar xf $filename.tar.gz
   mv $filename cmake
   rm $tarname

   CMAKE=$TC/cmake/bin/cmake
}

all_funcs_list+=(download_cmake)
function download_cmake {

   pushd .

   if ! [ -d cmake ]; then

      if ! which cmake &> /dev/null; then

         # CMake is not installed on the machine, download it.
         download_cmake_internal

      else

         # CMake is installed: let's check its version
         ver=$(generic_get_version_str cmake)
         major=$(get_version_comp $ver 1)
         minor=$(get_version_comp $ver 2)

         min_major=$(get_version_comp $CMAKE_MIN_VERSION 1)
         min_minor=$(get_version_comp $CMAKE_MIN_VERSION 2)

         if [ $major -lt $min_major ]; then

            # The installed CMake is too old.
            download_cmake_internal

         elif [ $major -eq $min_major ] && [ $minor -lt $min_minor ]; then

            # The installed CMake is too old.
            download_cmake_internal

         else

            # The installed version is >= $CMAKE_MIN_VERSION. Using it.
            CMAKE=cmake
            echo "NOTE: Using system's CMake (version $major.$minor)"

         fi

      fi

   else
      show_skip_component_msg "CMAKE"
   fi

   popd
}
