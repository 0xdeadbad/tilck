#!/usr/bin/env bash
# SPDX-License-Identifier: BSD-2-Clause

# ---------------------------------------------------------------
# NOTE
#
# This "script" is NOT meant to be executed directly.
# It is included as a source file by scripts/build_toolchain.
#
# ---------------------------------------------------------------

function custom_gcc_cross_tc_internal {

   local arch="$1"
   local arch_gcc="$2"
   local gh="https://github.com"
   local url="$gh/vvaltchev/musl-cross-make/releases/download/fd6be58297e"
   local tarname=""
   local url_target=""
   local url_host=""

   case $arch in
      i386) url_target="x86-i386";;
      x86_64) url_target="x86-64";;
      *) echo "TARGET $arch not supported by the CUSTOM GCC TC"; exit 1;;
   esac

   case $HOST_ARCH in
      i386) url_host="x86-i386";;
      x86_64) url_host="x86-64";;
      *) echo "HOST $HOST_ARCH not supported by the CUSTOM GCC TC"; exit 1;;
   esac

   tarname="${url_target}-musl-${MUSL_VER}"
   tarname="${tarname}-gcc-${GCC_TC_VER}"
   tarname="${tarname}-${url_host}.tar.bz2"

   download_file_in_cache "$url" "$tarname"
   extract_cachefile_tar_bz $tarname --

   # Adapt toolchains built with: https://github.com/richfelker/musl-cross-make
   # but support also toolchains that contain the necessary renamings already.

   pushd gcc_${GCC_TC_VER_}_${arch}_musl/bin
   for x in ${arch_gcc}-linux-musl-*; do
      if [ -f "$x" ]; then
         n=$(echo $x | sed s/musl-//)
         mv $x $n;
      fi
   done
   popd
   rm -f ${arch_gcc}-linux-cc
}

function custom_gcc_cross_tc {

   pushd $TC/host

   if [[ $ARCH == i386 || $ARCH == x86_64 ]]; then

      # Always download the i386 toolchain to build the legacy bootloader

      if ! [ -d "gcc_${GCC_TC_VER_}_i386_musl" ]; then
         custom_gcc_cross_tc_internal "i386" "i686"
      fi

      # Always download the x86_64 toolchain to build the 64-bit UEFI bootloader
      if ! [ -d "gcc_${GCC_TC_VER_}_x86_64_musl" ]; then
         custom_gcc_cross_tc_internal "x86_64" "x86_64"
      fi
   fi

   popd
}

function custom_gcc_cross_tc_installed_status {

   local arch_list=""

   for x in i386 x86_64; do
      if [ -d $TC/host_${HOST_ARCH}/gcc_${GCC_TC_VER_}_${x}_musl ]; then
         arch_list="${arch_list}${x} "
      fi
   done

   # Drop the trailing " "
   if [[ "${arch_list: -1}" == " " ]]; then
      arch_list="${arch_list:: -1}"
   fi

   if [[ "$arch_list" != "" ]]; then
      echo "installed $arch_list"
   fi
}
